name: test install-vulkan-sdk
on:
  push:
  workflow_dispatch:
      inputs:
        extra_tests:
          description: 'Enable additional CI tests'
          required: false
          default: false
        versions:
          description: 'Vulkan SDK Versions'
          required: true
          default: '[ "1.3.204.0" ]'
        oses:
          description: 'Matrix OSes'
          required: true
          default: '[ "ubuntu-latest", "windows-latest", "macos-latest" ]'
        quiet:
          description: 'silence annotation'
          required: false
          default: false
jobs:
  setup-all-matrix:
    if: ${{ github.event.inputs.extra_tests == 'true' || github.event.inputs.extra_tests == 'matrix' }}
    strategy:
      matrix:
        os: ${{ fromJSON(github.event.inputs.oses) }}
        version: ${{ fromJSON(github.event.inputs.versions) }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          version: ${{ matrix.version }}
          cache: true
          quiet: ${{ github.event.inputs.quiet }}
      - name: Test Vulkan SDK Install
        shell: bash
        run: |
          echo "Vulkan SDK Version=='$VULKAN_SDK_VERSION'"
          echo "VULKAN_SDK=='$VULKAN_SDK'"
          test -n "$VULKAN_SDK_VERSION"
          glslangValidator --version
          cmake -B tests/build -S tests -DCMAKE_BUILD_TYPE=Release -DCMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE=.
          cmake --build tests/build --config release

  test-prebuilt-windows:
    if: ${{ contains(github.event.inputs.extra_tests, 'prebuilt-windows') }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          version: ${{ fromJSON(github.event.inputs.versions)[0] }}
          cache: false
      - name: Smoke test Vulkan SDK
        shell: bash
        run: |
          echo VULKAN_SDK=$VULKAN_SDK
          echo VULKAN_SDK_VERSION=$VULKAN_SDK_VERSION
          glslangValidator --version
          spirv-cfg --version
          spirv-cross --help 2>&1 | head -1
          glslc --version
          du -hsc $VULKAN_SDK/*
          find $VULKAN_SDK -size +50M | xargs ls -lrth
      - name: Test compiling against Vulkan SDK
        shell: cmd
        run: |
          echo "Vulkan SDK Version=='%VULKAN_SDK_VERSION%'"
          echo "VULKAN_SDK=='%VULKAN_SDK%'"
          if "%VULKAN_SDK_VERSION%"=="" exit 1
          cmake -B tests/build -S tests -DCMAKE_BUILD_TYPE=Release -DCMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE=. || exit /b 2
          cmake --build tests/build --config release || exit /b 3
          dir .\tests\build\test_vulkan.exe
          echo testing...
          set PATH=%PATH%;%VULKAN_SDK%/Bin
          .\tests\build\test_vulkan || true || exit /b 4

  test-prebuilt-linux:
    if: ${{ contains(github.event.inputs.extra_tests, 'prebuilt-linux') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          version: ${{ fromJSON(github.event.inputs.versions)[0] }}
          cache: false
      - name: Smoke test Vulkan SDK
        shell: bash
        run: |
          echo VULKAN_SDK=$VULKAN_SDK
          echo VULKAN_SDK_VERSION=$VULKAN_SDK_VERSION
          glslangValidator --version
          spirv-cfg --version
          spirv-cross --help 2>&1 | head -1
          glslc --version
          du -hsc $VULKAN_SDK/*
          find $VULKAN_SDK -size +50M | xargs ls -lrth
      - name: Test compiling against Vulkan SDK Install
        shell: bash
        run: |
          echo "Vulkan SDK Version=='$VULKAN_SDK_VERSION'"
          echo "VULKAN_SDK=='$VULKAN_SDK'"
          glslangValidator --version
          test -n "$VULKAN_SDK_VERSION"
          cmake -B tests/build -S tests -DCMAKE_BUILD_TYPE=Release -DCMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE=.
          cmake --build tests/build --config release
          ./tests/build/test_vulkan

  test-prebuilt-macos:
    if: ${{ contains(github.event.inputs.extra_tests, 'prebuilt-mac') }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup tmate session
        if: ${{ contains(github.event.inputs.extra_tests, 'tmate-before') }}
        uses: mxschmitt/action-tmate@v3.9
        with:
          limit-access-to-actor: true
      - uses: ./
        with:
          version: ${{ fromJSON(github.event.inputs.versions)[0] }}
          cache: false
      - name: Setup tmate session
        if: ${{ contains(github.event.inputs.extra_tests, 'tmate-after') }}
        uses: mxschmitt/action-tmate@v3.9
        with:
          limit-access-to-actor: true
      - name: Smoke test Vulkan SDK
        shell: bash
        run: |
          echo VULKAN_SDK=$VULKAN_SDK
          echo VULKAN_SDK_VERSION=$VULKAN_SDK_VERSION
          glslangValidator --version
          spirv-cfg --version
          spirv-cross --help 2>&1 | head -1
          glslc --version
          du -hsc $VULKAN_SDK/*
          find $VULKAN_SDK -size +50M | xargs ls -lrth
      - name: Test compiling against Vulkan SDK Install
        shell: bash
        run: |
          echo "Vulkan SDK Version=='$VULKAN_SDK_VERSION'"
          echo "VULKAN_SDK=='$VULKAN_SDK'"
          test -n "$VULKAN_SDK_VERSION"
          cmake -B tests/build -S tests -DCMAKE_BUILD_TYPE=Release -DCMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE=.
          cmake --build tests/build --config release
          ./tests/build/test_vulkan
